{"version":3,"file":"static/js/676.f799b1fc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.query;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filterQuary) => {\n        if (!filterQuary) {\n            return contacts\n        }\n        const clearFilter = filterQuary.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(clearFilter));\n    }\n);\n\n","import styled from \"styled-components\";\nimport { Form as FormikForm, ErrorMessage as FormikError } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n    width: 400px;\n    padding: 8px;\n    border: 1px solid #2a2a2a;\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    border-radius: 12px;\n`;\n\nexport const FormField = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-weight: 600;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n    color: tomato;\n`\n\nexport const SubmitBtn = styled.button`\n    width: 200px;\n    border-radius: 8px;\n    border: 1px solid black;\n    padding: 5px;\n    font-size: 15px;\n    font-weight: 600;\n    background-color: white;\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    justify-content: center;\n\n    :hover {\n        background-color: tomato;\n    }\n`","import PropTypes from 'prop-types';\nimport { Formik, Field} from 'formik';\n\nimport * as Yup from 'yup';\nimport { FormField, Form, ErrorMessage, SubmitBtn } from './ContactForm.styled';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name is too short!')\n    .max(50, 'Name is too long!')\n    .required('Name is required'),\n  number: Yup.string()\n    .min(2, 'Number is too short!')\n    .max(50, 'Number is too long!')\n    .required('Number is required'),\n});\n\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, actions) => {\n    const findName = values.name.toLowerCase();\n    if (contacts.find(({ name }) => name.toLowerCase() === findName)) {\n      alert(`${values.name} is already in contacts`);\n      return\n    }\n\n    dispatch(addContact(values));\n    actions.resetForm();\n\n  }\n\n\n    return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: ''\n      }}\n      validationSchema={ContactShema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormField>\n            Name\n            <Field name=\"name\"/>\n            <ErrorMessage name=\"name\" component=\"span\"/>\n        </FormField>\n        <FormField>\n            Number\n            <Field name=\"number\" type=\"tel\"/>\n            <ErrorMessage name=\"number\" component=\"span\"/>\n        </FormField>\n            <SubmitBtn type=\"submit\" onSubmit={onSubmit}>\n                <BsFillPersonPlusFill size=\"15\" />\n                <span>Add contact</span>\n            </SubmitBtn>\n      </Form>\n    </Formik>\n    )\n}\n\nContactsForm.propTypes = {\n    onAddContact: PropTypes.func\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\"\n\n\nexport const Filter = () => {\n    const filterQuery = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const onFilterChange = e => dispatch(setFilter(e.currentTarget.value));\n    \n    return (\n        <div>\n            <label>\n                <p>Find contacts by name</p>\n                <input type=\"text\" value={filterQuery} onChange={onFilterChange} />\n            </label>\n        </div>\n    )\n}\n\n","import { MutatingDots } from \"react-loader-spinner\";\n\nexport const Loader = () => {\n    return (\n    <MutatingDots \n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        secondaryColor= '#4fa94d'\n        radius='12.5'\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n    />\n    )\n}","import styled from \"styled-components\";\n\nexport const DeleteBtn = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    width: 100px;\n    padding: 5px;\n    border: 1px solid black;\n    border-radius: 4px;\n    background-color: white;\n\n    :hover {\n        background-color: tomato;\n    }\n\n`","import PropTypes from 'prop-types';\nimport { BsPersonLinesFill, BsFillPersonXFill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { DeleteBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <BsPersonLinesFill size=\"20\"/>\n            <span>{name}: </span>\n            <span>{number}</span>\n            <DeleteBtn type='button' onClick={() => dispatch(deleteContact(id))}>\n                <BsFillPersonXFill size=\"15\" />\n                <span>Delete</span>\n            </DeleteBtn>\n        </>\n    )\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    margin-top: 18px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-weight: 600;\n`","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List, ListItem } from './ContactList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n    return (\n        <List>\n            {contacts.map(contact => (\n                <ListItem key={contact.id}>\n                    <ContactItem contact={contact}/>\n                </ListItem>\n            ))}\n        </List>\n    )\n}\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { ContactsForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactsList } from 'components/ContactList/ContactList';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\n\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n            <h1>Phonebook</h1>\n            <ContactsForm />\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading ? <Loader />\n                : error ? <p>{error}</p>\n                    : <ContactsList />}\n        </HelmetProvider>\n\n    )\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","query","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterQuary","clearFilter","toLowerCase","contact","name","includes","Form","styled","FormikForm","FormField","ErrorMessage","FormikError","SubmitBtn","ContactShema","Yup","shape","min","max","required","number","ContactsForm","useSelector","dispatch","useDispatch","onSubmit","values","actions","findName","find","alert","addContact","resetForm","initialValues","validationSchema","component","type","size","Filter","filterQuery","value","onChange","e","setFilter","currentTarget","Loader","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","DeleteBtn","ContactItem","id","onClick","deleteContact","List","ListItem","ContactsList","map","useEffect","fetchContacts"],"sourceRoot":""}